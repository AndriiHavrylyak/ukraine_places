name: ukraine_places
description: A new Flutter project.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=2.19.4 <3.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter
  #multilanguage support
  intl: ^0.17.0
  #remove if not required
  cupertino_icons: ^1.0.5
  #state management
  flutter_bloc: ^8.0.1
  equatable: ^2.0.3
  #vector images
  flutter_svg: ^1.1.5
  #DI/navigation(routing)/app modularisation
  flutter_modular: ^5.0.3
  #persistance/cache
  shared_preferences: ^2.0.15
  #logging
  logger: ^1.1.0
  #JSON serialization/deserialization helper
  json_annotation: ^4.5.0
  #HTTP client
  dio: ^4.0.6
  #logging network requests
  pretty_dio_logger: ^1.1.1
  #simplified networking
  retrofit: ^3.3.1
  #geolocation + helper for location calculations
  geolocator: ^8.2.1
  #checking network status
  connectivity_plus: ^2.3.3
  #features to some of the types, like Lists/collections, Strings, EmailUtils, math and much more
  basic_utils: ^4.2.2
  #helper utils to collections (addition to previous dependency if needed)
  collection: ^1.16.0
  #native android popup messages to other platforms
  #only for Either feature, feel free to use any feature
  fluttertoast: ^8.0.9
  dartz: ^0.10.1
  #plugin that provides a Google Maps widget.
  google_maps_flutter: ^2.1.8
  #Firebase Auth for Flutter
  firebase_auth: ^3.6.2
  #A Flutter plugin to use the Firebase Core API, which enables connecting to multiple Firebase apps.
  firebase_core: ^1.18.0
  #A Flutter plugin that provides a WebView widget.
  webview_flutter: ^3.0.4
  #A Flutter plugin to use the Firebase Database API.
  firebase_database: ^9.0.16
  #Flutter plugin for playing or streaming YouTube videos inline using the official iFrame Player API.
  youtube_player_iframe: ^2.3.0
  #A Flutter plugin for iOS and Android for picking images from the image library, and taking new pictures with the camera.
  image_picker: ^0.8.5+3
  #A flutter package to easily added dotted borders around widgets.
  dotted_border: ^2.0.0+2
  #A Flutter plugin to use the Firebase Cloud Storage API.
  firebase_storage: ^10.2.18
  #Simple, fast generation of RFC4122 UUIDs.
  uuid: ^3.0.6
  #This is an implementation of the google_maps_flutter plugin for web.
  google_maps_flutter_web: ^0.4.0
  cloud_firestore: ^3.1.18
  geocoding: ^2.0.5
  #to customize map markers
  #  custom_marker: ^1.0.0
  #A Flutter plugin for launching a URL.
  url_launcher: ^6.1.4
  flutter_screenutil: ^5.5.3+2
  flutter_cache_manager: ^3.3.0
  pointer_interceptor: ^0.9.3+2
  #A simple zoomable image/content widget for Flutter.
  photo_view: ^0.14.0
  universal_html: ^2.0.8
  freezed_annotation: any
  cloud_functions: ^3.3.3
  scrollable_positioned_list: ^0.3.2
  firebase_messaging: ^13.0.4
  notification_permissions: ^0.6.1
  flutter_local_notifications: ^9.9.0
  overlay_support: ^2.0.1
  #A command-line tool which simplifies the task of updating your Flutter app's launcher icon.
  flutter_launcher_icons: ^0.10.0
  smooth_page_indicator: ^1.0.0+2
  #A Flutter plugin to use the Firebase Analytics API.
  firebase_analytics: ^9.3.2
  gradient_floating_button: ^0.0.3
  cached_network_image: ^3.2.1
  #A Flutter plugin to use the Firebase Crashlytics API.
  firebase_crashlytics: ^2.8.12
  firebase_core_platform_interface: 4.5.1
  package_info_plus: ^3.0.1
  # Get current device information from within the Flutter application.
  device_info_plus: ^8.0.0
  firebase_dynamic_links: ^4.3.11
  share_plus: ^6.3.0
  flutter_google_places: ^0.3.0
  google_api_headers: ^1.5.0
  google_maps_webservice: ^0.0.20-nullsafety.5
  google_sign_in: ^5.4.4
  flutter_facebook_auth: ^3.5.0
  sign_in_with_apple: ^3.0.0
  crypto: ^3.0.1
  flutter_slidable: ^2.0.0
  qr_flutter: ^4.0.0
  html_unescape: ^2.0.0
  infinite_scroll_pagination: ^3.2.0
  showcaseview: ^1.1.5
  google_fonts: ^3.0.1
  easy_localization: ^3.0.1

dev_dependencies:
  flutter_test:
    sdk: flutter


  freezed: ^2.1.0+1
  retrofit_generator: ^4.2.0
  build_runner: ^2.3.2
  json_serializable: ^6.5.4
  gradient_borders: ^0.2.0
  analyzer: any
  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0



# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/jpg/
    - assets/translations/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
